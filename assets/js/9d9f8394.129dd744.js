"use strict";(self.webpackChunkintegration_docs=self.webpackChunkintegration_docs||[]).push([[13],{7309:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"troubleshooting","title":"Troubleshooting Common Issues","description":"This guide helps you diagnose and resolve common issues when integrating with Rapido\'s Partner PWA platform. Issues are organized by category with step-by-step solutions.","source":"@site/docs/troubleshooting.md","sourceDirName":".","slug":"/troubleshooting","permalink":"/ota-docs/docs/troubleshooting","draft":false,"unlisted":false,"editUrl":"https://github.com/rapido-labs/ota-docs/tree/main/docs/docs/troubleshooting.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"Troubleshooting Common Issues","sidebar_label":"Troubleshooting","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"FAQ","permalink":"/ota-docs/docs/faq"}}');var s=o(4848),t=o(8453);const r={title:"Troubleshooting Common Issues",sidebar_label:"Troubleshooting",sidebar_position:6},a="Troubleshooting Common Issues",l={},c=[{value:"Authentication Issues",id:"authentication-issues",level:2},{value:"<code>onTokenReceived</code> Not Triggered",id:"ontokenreceived-not-triggered",level:3},{value:"Diagnostic Steps",id:"diagnostic-steps",level:4},{value:"Solutions",id:"solutions",level:4},{value:"Token Validation Errors",id:"token-validation-errors",level:3},{value:"HTTP 401 - Unauthorized",id:"http-401---unauthorized",level:4},{value:"HTTP 400 - Bad Request",id:"http-400---bad-request",level:4},{value:"HTTP 429 - Rate Limited",id:"http-429---rate-limited",level:4},{value:"Network and API Issues",id:"network-and-api-issues",level:2},{value:"CORS Errors",id:"cors-errors",level:3},{value:"SSL/TLS Certificate Issues",id:"ssltls-certificate-issues",level:3},{value:"Timeout Issues",id:"timeout-issues",level:3},{value:"Production Environment Issues",id:"production-environment-issues",level:2},{value:"Environment Variable Problems",id:"environment-variable-problems",level:3},{value:"Debugging Tools",id:"debugging-tools",level:2},{value:"Enable Debug Mode",id:"enable-debug-mode",level:3},{value:"Create Integration Test Script",id:"create-integration-test-script",level:3}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"troubleshooting-common-issues",children:"Troubleshooting Common Issues"})}),"\n",(0,s.jsx)(e.p,{children:"This guide helps you diagnose and resolve common issues when integrating with Rapido's Partner PWA platform. Issues are organized by category with step-by-step solutions."}),"\n",(0,s.jsx)(e.h2,{id:"authentication-issues",children:"Authentication Issues"}),"\n",(0,s.jsxs)(e.h3,{id:"ontokenreceived-not-triggered",children:[(0,s.jsx)(e.code,{children:"onTokenReceived"})," Not Triggered"]}),"\n",(0,s.jsx)(e.p,{children:"This is the most common issue developers face. Here's how to diagnose and fix it:"}),"\n",(0,s.jsx)(e.h4,{id:"diagnostic-steps",children:"Diagnostic Steps"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Check if function is globally accessible"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"// Test in browser console\nconsole.log(typeof window.onTokenReceived); // Should be 'function'\n\n// If undefined, the function isn't globally accessible\nif (typeof window.onTokenReceived === 'undefined') {\n    console.error('onTokenReceived is not globally accessible');\n}\n"})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Verify function timing"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"// \u274c Wrong - function defined after token request\nwindow.NativeJSBridge.requestUserToken('client-id');\nwindow.onTokenReceived = function(token) { /* ... */ };\n\n// \u2705 Correct - function defined before token request\nwindow.onTokenReceived = function(token) { /* ... */ };\nwindow.NativeJSBridge.requestUserToken('client-id');\n"})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Check bridge availability"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"function debugBridge() {\n    console.log('NativeJSBridge available:', !!window.NativeJSBridge);\n    \n    if (window.NativeJSBridge) {\n        console.log('requestUserToken available:', typeof window.NativeJSBridge.requestUserToken);\n        console.log('storeSessionId available:', typeof window.NativeJSBridge.storeSessionId);\n        console.log('fetchSessionId available:', typeof window.NativeJSBridge.fetchSessionId);\n    } else {\n        console.warn('Not running in Rapido app environment');\n    }\n}\n\ndebugBridge();\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h4,{id:"solutions",children:"Solutions"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Problem"}),": Function inside module/closure"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"// \u274c Problem - function not globally accessible\n(function() {\n    function onTokenReceived(token) {\n        console.log('Token received');\n    }\n})();\n\n// \u2705 Solution - make function globally accessible\nwindow.onTokenReceived = function(token) {\n    console.log('Token received');\n    // Handle token\n};\n"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Problem"}),": Function overwritten by framework"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"// \u274c Problem - React/Vue might overwrite the function\nuseEffect(() => {\n    window.onTokenReceived = handleToken;\n}, []); // Function might be overwritten\n\n// \u2705 Solution - ensure function persists\nuseEffect(() => {\n    // Store reference to prevent overwriting\n    const originalCallback = window.onTokenReceived;\n    \n    window.onTokenReceived = function(token) {\n        handleToken(token);\n        // Call original if it existed\n        if (originalCallback && originalCallback !== handleToken) {\n            originalCallback(token);\n        }\n    };\n    \n    return () => {\n        // Cleanup if needed\n        if (window.onTokenReceived === handleToken) {\n            delete window.onTokenReceived;\n        }\n    };\n}, []);\n"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Problem"}),": User denied consent"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"// \u2705 Solution - implement timeout detection\nfunction requestTokenWithTimeout() {\n    let timeoutId;\n    let tokenReceived = false;\n    \n    // Store original callback\n    const originalCallback = window.onTokenReceived;\n    \n    // Set up timeout (30 seconds)\n    timeoutId = setTimeout(() => {\n        if (!tokenReceived) {\n            console.log('Token request timed out - user likely denied consent');\n            showConsentRequiredMessage();\n            \n            // Restore original callback\n            window.onTokenReceived = originalCallback;\n        }\n    }, 30000);\n    \n    // Override callback temporarily\n    window.onTokenReceived = function(token) {\n        tokenReceived = true;\n        clearTimeout(timeoutId);\n        \n        // Call original callback\n        if (originalCallback) {\n            originalCallback(token);\n        }\n        \n        // Restore original callback\n        window.onTokenReceived = originalCallback;\n    };\n    \n    // Request token\n    if (window.NativeJSBridge && window.NativeJSBridge.requestUserToken) {\n        window.NativeJSBridge.requestUserToken('your-client-id');\n    } else {\n        console.error('Rapido bridge not available');\n        clearTimeout(timeoutId);\n    }\n}\n"})}),"\n",(0,s.jsx)(e.h3,{id:"token-validation-errors",children:"Token Validation Errors"}),"\n",(0,s.jsx)(e.h4,{id:"http-401---unauthorized",children:"HTTP 401 - Unauthorized"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Symptoms"}),": Backend returns 401 when validating tokens"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Diagnostic Steps"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"// Check API key configuration\nfunction validateAPIConfig() {\n    const apiKey = process.env.RAPIDO_PARTNER_API_KEY;\n    \n    if (!apiKey) {\n        console.error('RAPIDO_PARTNER_API_KEY not set');\n        return false;\n    }\n    \n    if (apiKey.length < 32) {\n        console.error('API key appears to be invalid (too short)');\n        return false;\n    }\n    \n    if (apiKey.startsWith('your-') || apiKey.includes('example')) {\n        console.error('API key appears to be a placeholder');\n        return false;\n    }\n    \n    console.log('API key configuration appears valid');\n    return true;\n}\n"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Solutions"}),":"]}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Check environment variables"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Verify environment variables are set\necho $RAPIDO_PARTNER_API_KEY\necho $RAPIDO_CLIENT_ID\n\n# For Node.js applications\nnode -e \"console.log('API Key:', process.env.RAPIDO_PARTNER_API_KEY ? 'SET' : 'NOT SET')\"\n"})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Verify API endpoint"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"// Ensure you're using the correct environment\nconst baseURL = process.env.NODE_ENV === 'production'\n    ? 'https://partner-api.rapido.bike/ota'      // Production\n    : 'https://staging-api.rapido.bike/partner'; // Staging\n\nconsole.log('Using API endpoint:', baseURL);\n"})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Check API key format"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"// Test API key with a simple request\nasync function testAPIKey() {\n    try {\n        const response = await fetch(`${baseURL}/health`, {\n            headers: {\n                'Authorization': `Bearer ${apiKey}`,\n                'Content-Type': 'application/json'\n            }\n        });\n        \n        console.log('API key test status:', response.status);\n        \n        if (response.status === 401) {\n            console.error('API key is invalid or expired');\n        }\n    } catch (error) {\n        console.error('API key test failed:', error.message);\n    }\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h4,{id:"http-400---bad-request",children:"HTTP 400 - Bad Request"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Symptoms"}),": Invalid request format or missing parameters"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Common Causes"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"// \u274c Missing token\nconst response = await fetch('/partner/fetch-user-details', {\n    method: 'POST',\n    body: ''\n});\n\n// \u2705 Correct request format\nconst response = await fetch('/partner/fetch-user-details', {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${apiKey}`,\n        'x-client-id': 'CLIENT_ID'\n    },\n    body: JSON.stringify({\n        token: token\n    })\n});\n"})}),"\n",(0,s.jsx)(e.h4,{id:"http-429---rate-limited",children:"HTTP 429 - Rate Limited"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Symptoms"}),": Too many requests error"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Solutions"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"// Implement exponential backoff\nasync function validateTokenWithBackoff(token, maxRetries = 3) {\n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n        try {\n            const response = await fetch('/api/auth/rapido-login', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ token })\n            });\n            \n            if (response.status === 429) {\n                const retryAfter = response.headers.get('Retry-After') || Math.pow(2, attempt);\n                console.log(`Rate limited. Retrying after ${retryAfter} seconds`);\n                \n                if (attempt === maxRetries) {\n                    throw new Error('Rate limit exceeded. Please try again later.');\n                }\n                \n                await new Promise(resolve => setTimeout(resolve, retryAfter * 1000));\n                continue;\n            }\n            \n            return await response.json();\n            \n        } catch (error) {\n            if (attempt === maxRetries) throw error;\n            \n            const delay = Math.pow(2, attempt) * 1000;\n            await new Promise(resolve => setTimeout(resolve, delay));\n        }\n    }\n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"network-and-api-issues",children:"Network and API Issues"}),"\n",(0,s.jsx)(e.h3,{id:"cors-errors",children:"CORS Errors"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Symptoms"}),': "Access blocked by CORS policy" errors']}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Diagnostic Steps"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"// Check if CORS error is due to domain mismatch\nfunction debugCORS() {\n    console.log('Current domain:', window.location.hostname);\n    console.log('Current protocol:', window.location.protocol);\n    \n    // CORS errors often indicate domain not whitelisted\n    if (window.location.protocol !== 'https:') {\n        console.error('\u274c Using HTTP - Rapido requires HTTPS');\n    }\n    \n    if (window.location.hostname === 'localhost') {\n        console.warn('\u26a0\ufe0f Using localhost - ensure this domain is whitelisted for testing');\n    }\n}\n\ndebugCORS();\n"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Solutions"}),":"]}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Verify domain whitelisting"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Contact Rapido integration team to whitelist your domains:\n# - Production: https://your-app.com\n# - Staging: https://staging.your-app.com\n# - Development: https://localhost:3000\n"})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Check CORS configuration (backend)"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"// Express.js CORS configuration\nconst cors = require('cors');\n\nconst corsOptions = {\n    origin: [\n        'https://your-app.com',\n        'https://staging.your-app.com',\n        'https://localhost:3000' // Development only\n    ],\n    credentials: true,\n    optionsSuccessStatus: 200\n};\n\napp.use(cors(corsOptions));\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"ssltls-certificate-issues",children:"SSL/TLS Certificate Issues"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Symptoms"}),': Certificate errors or "connection not secure" warnings']}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Diagnostic Steps"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'# Check SSL certificate\nopenssl s_client -connect your-domain.com:443 -servername your-domain.com\n\n# Check certificate expiry\ncurl -vI https://your-domain.com 2>&1 | grep -E "expire|issuer"\n\n# Test SSL configuration\ncurl -I https://your-domain.com\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Solutions"}),":"]}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Verify certificate chain"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Ensure intermediate certificates are included\nopenssl verify -CAfile ca-bundle.crt your-certificate.crt\n"})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Check certificate validity"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"// Frontend certificate validation\nfunction checkSSLStatus() {\n    if (location.protocol !== 'https:') {\n        console.error('\u274c Site not using HTTPS');\n        return false;\n    }\n    \n    // Check if certificate is valid (no warnings)\n    if (navigator.webkitGetUserMedia || navigator.mozGetUserMedia) {\n        console.log('\u2705 HTTPS appears to be working correctly');\n        return true;\n    }\n    \n    return false;\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"timeout-issues",children:"Timeout Issues"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Symptoms"}),": API requests timing out"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Solutions"}),":"]}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Implement proper timeout handling"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"async function makeAPIRequestWithTimeout(url, options, timeoutMs = 10000) {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeoutMs);\n    \n    try {\n        const response = await fetch(url, {\n            ...options,\n            signal: controller.signal\n        });\n        \n        clearTimeout(timeoutId);\n        return response;\n        \n    } catch (error) {\n        clearTimeout(timeoutId);\n        \n        if (error.name === 'AbortError') {\n            throw new Error(`Request timeout after ${timeoutMs}ms`);\n        }\n        \n        throw error;\n    }\n}\n"})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Configure appropriate timeouts"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"// Different timeouts for different operations\nconst TIMEOUTS = {\n    TOKEN_VALIDATION: 10000,    // 10 seconds\n    SESSION_VALIDATION: 5000,   // 5 seconds\n    USER_DATA_FETCH: 15000      // 15 seconds\n};\n\nasync function validateToken(token) {\n    return makeAPIRequestWithTimeout(\n        '/api/auth/rapido-login',\n        {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ token })\n        },\n        TIMEOUTS.TOKEN_VALIDATION\n    );\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"production-environment-issues",children:"Production Environment Issues"}),"\n",(0,s.jsx)(e.h3,{id:"environment-variable-problems",children:"Environment Variable Problems"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Symptoms"}),": Integration works in development but fails in production"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Diagnostic Checklist"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Check if environment variables are set\nprintenv | grep RAPIDO\n\n# For Docker containers\ndocker exec container_name printenv | grep RAPIDO\n\n# For systemd services\nsystemctl show-environment | grep RAPIDO\n"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Solutions"}),":"]}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Validate environment on startup"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"// Add to your application startup\nfunction validateEnvironment() {\n    const required = [\n        'RAPIDO_PARTNER_API_KEY',\n        'RAPIDO_CLIENT_ID',\n        'SESSION_SECRET'\n    ];\n    \n    const missing = required.filter(key => !process.env[key]);\n    \n    if (missing.length > 0) {\n        console.error('\u274c Missing required environment variables:', missing);\n        process.exit(1);\n    }\n    \n    console.log('\u2705 All required environment variables are set');\n}\n\nvalidateEnvironment();\n"})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Use environment-specific configurations"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"// config/index.js\nconst environments = {\n    development: {\n        rapidoAPI: 'https://staging-api.rapido.bike/partner',\n        logLevel: 'debug'\n    },\n    staging: {\n        rapidoAPI: 'https://staging-api.rapido.bike/partner',\n        logLevel: 'info'\n    },\n    production: {\n        rapidoAPI: 'https://partner-api.rapido.bike/ota',\n        logLevel: 'warn'\n    }\n};\n\nconst config = environments[process.env.NODE_ENV] || environments.development;\nmodule.exports = config;\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"debugging-tools",children:"Debugging Tools"}),"\n",(0,s.jsx)(e.h3,{id:"enable-debug-mode",children:"Enable Debug Mode"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"// Add debug logging throughout your integration\nconst DEBUG = process.env.NODE_ENV === 'development' || process.env.DEBUG === 'true';\n\nfunction debugLog(category, message, data = null) {\n    if (DEBUG) {\n        const timestamp = new Date().toISOString();\n        console.log(`[${timestamp}] [${category}] ${message}`, data || '');\n    }\n}\n\n// Usage throughout your code\ndebugLog('AUTH', 'Token received from Rapido');\ndebugLog('SESSION', 'Storing session ID', { sessionId: sessionId.substring(0, 8) + '...' });\ndebugLog('API', 'Validating token with backend');\n"})}),"\n",(0,s.jsx)(e.h3,{id:"create-integration-test-script",children:"Create Integration Test Script"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"// integration-test.js - Run this to test your integration\nasync function runIntegrationTest() {\n    console.log('\ud83d\udd0d Running Rapido Integration Test\\n');\n    \n    // Test 1: Environment variables\n    console.log('1. Checking environment variables...');\n    const apiKey = process.env.RAPIDO_PARTNER_API_KEY;\n    const clientId = process.env.RAPIDO_CLIENT_ID;\n    \n    if (!apiKey) {\n        console.error('\u274c RAPIDO_PARTNER_API_KEY not set');\n        return;\n    }\n    \n    if (!clientId) {\n        console.error('\u274c RAPIDO_CLIENT_ID not set');\n        return;\n    }\n    \n    console.log('\u2705 Environment variables configured\\n');\n    \n    // Test 2: API connectivity\n    console.log('2. Testing API connectivity...');\n    try {\n        const response = await fetch(`${config.rapidoAPI}/health`, {\n            headers: {\n                'Authorization': `Bearer ${apiKey}`\n            },\n            timeout: 10000\n        });\n        \n        if (response.ok) {\n            console.log('\u2705 API connectivity working\\n');\n        } else {\n            console.error(`\u274c API returned status ${response.status}\\n`);\n        }\n    } catch (error) {\n        console.error('\u274c API connectivity failed:', error.message, '\\n');\n    }\n    \n    // Test 3: Database connectivity\n    console.log('3. Testing database connectivity...');\n    try {\n        await mongoose.connection.db.admin().ping();\n        console.log('\u2705 Database connectivity working\\n');\n    } catch (error) {\n        console.error('\u274c Database connectivity failed:', error.message, '\\n');\n    }\n    \n    // Test 4: Session operations\n    console.log('4. Testing session operations...');\n    try {\n        const testSession = await Session.create({\n            sessionId: 'test-' + Date.now(),\n            userId: 'test-user',\n            expiresAt: new Date(Date.now() + 60000)\n        });\n        \n        await Session.deleteOne({ _id: testSession._id });\n        console.log('\u2705 Session operations working\\n');\n    } catch (error) {\n        console.error('\u274c Session operations failed:', error.message, '\\n');\n    }\n    \n    console.log('\ud83c\udf89 Integration test complete!');\n}\n\nrunIntegrationTest().catch(console.error);\n"})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Still Having Issues?"})}),"\n",(0,s.jsx)(e.p,{children:"If you're still experiencing problems after following this troubleshooting guide:"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Enable debug logging"})," and gather detailed error information"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Run the integration test script"})," to identify specific failure points"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsxs)(e.strong,{children:["Check our ",(0,s.jsx)(e.a,{href:"/ota-docs/docs/faq",children:"FAQ"})]})," for additional common questions"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Contact support"})," at ",(0,s.jsx)(e.a,{href:"mailto:partner-support@rapido.bike",children:"partner-support@rapido.bike"})," with:","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Detailed error messages"}),"\n",(0,s.jsx)(e.li,{children:"Steps to reproduce the issue"}),"\n",(0,s.jsx)(e.li,{children:"Your environment details (Node.js version, browser, etc.)"}),"\n",(0,s.jsx)(e.li,{children:"Debug logs (with sensitive information removed)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Emergency Support"}),": For production issues affecting live users, contact ",(0,s.jsx)(e.a,{href:"mailto:emergency-support@rapido.bike",children:"emergency-support@rapido.bike"}),' with "URGENT" in the subject line.']})]})}function u(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},8453:(n,e,o)=>{o.d(e,{R:()=>r,x:()=>a});var i=o(6540);const s={},t=i.createContext(s);function r(n){const e=i.useContext(t);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),i.createElement(t.Provider,{value:e},n.children)}}}]);